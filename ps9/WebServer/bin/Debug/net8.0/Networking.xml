<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Networking</name>
    </assembly>
    <members>
        <member name="T:CS3500.Networking.NetworkConnection">
            <summary>
              Wraps the StreamReader/Writer/TcpClient together so we
              don't have to keep creating all three for network actions.
            </summary>
        </member>
        <member name="F:CS3500.Networking.NetworkConnection._tcpClient">
            <summary>
              The connection/socket abstraction
            </summary>
        </member>
        <member name="F:CS3500.Networking.NetworkConnection._reader">
            <summary>
              Reading end of the connection
            </summary>
        </member>
        <member name="F:CS3500.Networking.NetworkConnection._writer">
            <summary>
              Writing end of the connection
            </summary>
        </member>
        <member name="M:CS3500.Networking.NetworkConnection.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
              Initializes a new instance of the <see cref="T:CS3500.Networking.NetworkConnection"/> class.
              <para>
                Create a network connection object.
              </para>
            </summary>
            <param name="tcpClient">
              An already existing TcpClient
            </param>
        </member>
        <member name="M:CS3500.Networking.NetworkConnection.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:CS3500.Networking.NetworkConnection"/> class.
              <para>
                Create a network connection object.  The tcpClient will be unconnected at the start.
              </para>
            </summary>
        </member>
        <member name="P:CS3500.Networking.NetworkConnection.IsConnected">
            <summary>
            Gets a value indicating whether the socket is connected.
            </summary>
        </member>
        <member name="M:CS3500.Networking.NetworkConnection.Connect(System.String,System.Int32)">
            <summary>
              Try to connect to the given host:port. 
            </summary>
            <param name="host"> The URL or IP address, e.g., www.cs.utah.edu, or  127.0.0.1. </param>
            <param name="port"> The port, e.g., 11000. </param>
        </member>
        <member name="M:CS3500.Networking.NetworkConnection.Send(System.String)">
            <summary>
              Send a message to the remote server.  If the <paramref name="message"/> contains
              new lines, these will be treated on the receiving side as multiple messages.
              This method should attach a newline to the end of the <paramref name="message"/>
              (by using WriteLine).
              If this operation can not be completed (e.g. because this NetworkConnection is not
              connected), throw an InvalidOperationException.
            </summary>
            <param name="message"> The string of characters to send. </param>
        </member>
        <member name="M:CS3500.Networking.NetworkConnection.ReadLine">
            <summary>
              Read a message from the remote side of the connection.  The message will contain
              all characters up to the first new line. See <see cref="M:CS3500.Networking.NetworkConnection.Send(System.String)"/>.
              If this operation can not be completed (e.g. because this NetworkConnection is not
              connected), throw an InvalidOperationException.
            </summary>
            <returns> The contents of the message. </returns>
        </member>
        <member name="M:CS3500.Networking.NetworkConnection.Disconnect">
            <summary>
              If connected, disconnect the connection and clean 
              up (dispose) any streams.
            </summary>
        </member>
        <member name="M:CS3500.Networking.NetworkConnection.Dispose">
            <summary>
              Automatically called with a using statement (see IDisposable)
            </summary>
        </member>
    </members>
</doc>
